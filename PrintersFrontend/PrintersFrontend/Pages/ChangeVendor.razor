@page "/vendor/{Id:int}"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using PrintersFrontend.Models
@inject HttpClient Http
@inject NavigationManager navigationManager

@if (changeVendor == null)
{
    <Loading />
}
else
{
<EditForm Model="changeVendor" OnValidSubmit="@EditVendor">
    <DataAnnotationsValidator />

    <h6>Vendor</h6>
    <InputText class="InStyle" id="Name" @bind-Value="changeVendor.Name" placeholder="Производитель" />
    <ValidationMessage For="@(() => changeVendor.Name)" />
    <br />
    <br />
    @if (IsNew)
    {
        <Button Type="submit" Name="Добавить" Width="250" />
        <Button Type="button" Name="Назад" Width="250" OnClick="Back"></Button>
    }
    else
    {
        <Button Type="button" Name="Удалить производителя" Width="250" OnClick="RemoveVendor"></Button>
        <Button Type="submit" Name="Редактировать" Width="250" />
        <Button Type="button" Name="Назад" Width="250" OnClick="Back"></Button>
    }
</EditForm>
}

@code
{
    [Parameter]
    public int Id { get; set; }
    bool IsNew = false;

    private Vendor changeVendor;

    protected override async Task OnInitializedAsync()
    {
        IsNew = false;
        if (Id == 0)
        {
            IsNew = true;
            changeVendor = new Vendor();
        }
        else
        {
            changeVendor = await Http.GetFromJsonAsync<Vendor>($"https://localhost:44337/api/vendors/{Id}");

            if (changeVendor.Id == 0)
            {
                Id = 0;
                IsNew = true;
            }
        }
    }


    private async Task EditVendor()
    {
        if (IsNew)
        {
            await Http.PostAsJsonAsync("https://localhost:44337/api/vendors", changeVendor);
        }
        else
        {
            await Http.PutAsJsonAsync("https://localhost:44337/api/vendors", changeVendor);
        }
    }

    private void Back()
    {
        navigationManager.NavigateTo("https://localhost:44382/vendors");
    }

    private async Task RemoveVendor()
    {
        await Http.DeleteAsync($"https://localhost:44337/api/vendors/{changeVendor.Id}");
        changeVendor = new Vendor();
    }
}
